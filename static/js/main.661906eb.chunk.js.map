{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","App","useState","setTodos","users","setUsers","titleInput","setTitleInput","userSelect","setUserSelect","errors","setErrors","useEffect","usersFromServer","todosFromServer","find","addTodo","event","preventDefault","hasErrors","length","prev","formHasErrors","newTodo","Math","max","state","action","method","onSubmit","type","placeholder","value","onChange","target","handleInputChange","handleSelectChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.661906eb.chunk.js","sourcesContent":["import { User } from '../../Interfaces/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../Interfaces/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} key={todo.user.id} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../Interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useEffect, useState } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './Interfaces/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './Interfaces/User';\n\ntype Errors = {\n  title: boolean,\n  userSelect: boolean\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelect, setUserSelect] = useState(0);\n  const [errors, setErrors] = useState<Errors>({\n    title: false,\n    userSelect: false,\n  });\n\n  useEffect(() => {\n    setUsers(usersFromServer);\n\n    setTodos(todosFromServer.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    })));\n  }, []);\n\n  const formHasErrors = () => {\n    let hasErrors = false;\n\n    if (titleInput.length === 0) {\n      setErrors(prev => ({ ...prev, title: true }));\n      hasErrors = true;\n    }\n\n    if (userSelect === 0) {\n      setErrors(prev => ({ ...prev, userSelect: true }));\n      hasErrors = true;\n    }\n\n    return hasErrors;\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value !== '') {\n      setErrors(state => ({ ...state, title: false }));\n    }\n\n    setTitleInput(event.target.value);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (+event.target.value !== 0) {\n      setErrors(state => ({ ...state, userSelect: false }));\n    }\n\n    setUserSelect(+event.target.value);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (formHasErrors()) {\n      return;\n    }\n\n    const maxTodoId = Math.max(...todos.map(todo => todo.id));\n    const newTodo: Todo = {\n      id: maxTodoId + 1,\n      title: titleInput,\n      completed: false,\n      userId: userSelect,\n      user: usersFromServer.find(user => user.id === userSelect),\n    };\n\n    setTitleInput('');\n    setUserSelect(0);\n    setTodos(state => [...state, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => addTodo(event)}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleInput}\n            onChange={event => handleInputChange(event)}\n          />\n          {errors.title && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userSelect}\n            onChange={(event) => handleSelectChange(event)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errors.userSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}